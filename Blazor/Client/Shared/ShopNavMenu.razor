@inject ICategoryService _categoryService;
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark navbar-toggler-wrapper">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-nav">
        <div class="nav-item px-2">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>


        @foreach (var category in _categoryService.Categories)
        {
             <div class="nav-item px-2">
            <NavLink class="nav-link" href="@category.Url">
                @category.Name
            </NavLink>
        </div>
        }

     
    </nav>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await _categoryService.GetAllCategories();
        _categoryService.CategoryChanged += StateHasChanged;

    }
    public void Dispose()
    {
        _categoryService.CategoryChanged -= StateHasChanged;
        
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
