@page "/product/{id:int}"
@inject IProductService ProductService

<h3>ProductDetails</h3>

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class='media'>
        <div class='media-img-wrapper mr-2'>
            <img class='media-img' src="@product.ImageUrl" alt="@product.Name" />
        </div>
        <div class='media-body'>
            <h2 class='mb-0'>
                @product.Name
            </h2>
            <p> @product.Description</p>


            @if (product.Variants != null && product.Variants.Count >1)
            {
                <div>
                    <p>Izaberi varijantu: </p>
                    <select class='form-select' @bind="currentTypeId">
                        @foreach(var variant in product.Variants)
                        {
                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                        }
                    </select>
                    </div>
            }


            @*  <h4 class='price'> @product.Price KM</h4>*@
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h4 class='text-muted original-price'>
                        Redovna cijena: @GetSelectedVariant().OriginalPrice
                    </h4>
                }
                <h4 class='price'>
                   Cijena:  @GetSelectedVariant().Price
                </h4>
            }
            else
            {
                <h4 class='price'>
                    heheh
                </h4>
            }

        </div>
    </div>
}




@code {
    private string message = string.Empty;
    private Product? product = null;
    private int currentTypeId { get; set; }


    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        var result = await ProductService.GetProduct(Id);
        if (!result.Sucess)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }

    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }




}
